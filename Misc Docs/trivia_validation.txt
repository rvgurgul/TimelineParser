
# 1, 2
x = analyze_games(criterion=lambda game: lambda game: help.get_most_recent_light_for_role(game, "Ambassador"),
                  games=query_games())
occurrence_report(x, normalized=True)

5788x	(42.95%)	Highlight
4826x	(35.81%)	Lowlight
2862x	(21.24%)	Neutral Light

# 3
x = analyze_games(criterion=lambda game: help.get_specific_win_condition(game["win_type"]),
                  games=query_games(constraints=lambda game: help.get_most_recent_light_for_role(game, "Spy") == "Lowlight"))
occurrence_report(x, normalized=True)

331x	(46.04%)	CivilianShot
294x	(40.89%)	MissionsWin
54x		 (7.51%)	TimeOut
40x		 (5.56%)	SpyShot

# 4, 5
x = analyze_games(criterion=lambda game: help.get_specific_win_condition(game["win_type"]),
                  games=query_games(constraints=lambda game: help.get_most_recent_light_for_role(game, "Spy") == "Highlight"))
occurrence_report(x, normalized=True)

4919x	(59.42%)	SpyShot
1765x	(21.32%)	MissionsWin
1226x	(14.81%)	CivilianShot
369x	 (4.46%)	TimeOut

# 6
x = analyze_games(criterion=lambda game: game["spy"],
                  games=query_games(constraints=lambda game: get_most_recent_light_for_role(game, "Spy") == "Lowlight"
                                                             and game["event"] in ["SCL4","SCL5"]))
occurrence_report(x)

Queried 13476 games:
 Accepted 516 games (3.8%)
 Rejected 12960 games (96.2%)
12x		 (2.33%)	davidw
11x		 (2.13%)	pwndnoob
10x		 (1.94%)	yerand
10x		 (1.94%)	ekajarmstro
9x		 (1.74%)	spedmonkey
9x		 (1.74%)	slappydavis
9x		 (1.74%)	kcmmmmm
8x		 (1.55%)	smonteGaming/steam
8x		 (1.55%)	ml726
8x		 (1.55%)	lazybear
8x		 (1.55%)	dowsey
8x		 (1.55%)	Watermeat/steam
...

# 7
x = analyze_games(criterion=lambda game: game["completed_missions"],
                  categorization=lambda game: game["venue"],
                  games=query_games())
for y in x:
    print("Results of", y)
    occurrence_report(x[y], only_top=2)

Queried 13476 games:
 Accepted 13476 games (100.0%)
 Rejected 0 games (0.0%)
Analyzing 13476 games, please wait...
0%                     25%                      50%                      75%                     100%
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
Results of High-Rise
613x	(31.1%)	Contact
498x	(25.27%)	Seduce
...
Results of Ballroom
1041x	(22.61%)	Contact
878x	(19.07%)	Seduce
...
Results of Pub
728x	(24.91%)	Contact
655x	(22.41%)	Inspect
...
Results of Aquarium
265x	(26.42%)	Contact
210x	(20.94%)	Seduce
...
Results of Veranda
523x	(20.17%)	Contact
435x	(16.78%)	Seduce
...
Results of Courtyard
1514x	(25.95%)	Contact     #1.95
1400x	(24.0%)	Inspect
...
Results of Library
1178x	(19.37%)	Contact     #2.05
1053x	(17.32%)	Seduce
...
Results of Balcony
727x	(63.27%)	Contact
211x	(18.36%)	Bug
...
Results of Moderne
825x	(21.73%)	Contact
669x	(17.62%)	Seduce
...
Results of Gallery
645x	(21.49%)	Contact
509x	(16.96%)	Seduce
...
Results of Terrace
550x	(35.42%)	Contact
372x	(23.95%)	Seduce
...
Results of Teien
282x	(27.33%)	Contact
184x	(17.83%)	Seduce
...
Results of Redwoods
3x		(30.0%)	Seduce
2x		(20.0%)	Inspect
...

# 8
x = analyze_games(criterion=lambda game: [event["action_test"] for event in game["timeline"] if "ActionTest" in event["category"]],
                  games=query_games())
occurrence_report(x)

38777x	(55.27%)	White
27376x	(39.02%)	Green
2419x	 (3.45%)	Red
911x	 (1.3%)	Ignored
681x	 (0.97%)	Canceled

#9
x = analyze_games(criterion=lambda game: [event["action_test"] for event in game["timeline"] if "ActionTest" in event["category"] and event["mission"] != "Fingerprint"],
                  games=query_games())
occurrence_report(x)

Queried 13476 games:
 Accepted 13476 games (100.0%)
 Rejected 0 games (0.0%)
Analyzing 13476 games, please wait...
0%                     25%                      50%                      75%                     100%
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
38777x	(56.44%)	White
26794x	(39.0%)	Green
1567x	 (2.28%)	Red
884x	 (1.29%)	Ignored
681x	 (0.99%)	Canceled

#10, 11
from Criteria.ActionTestForMission import get_tests_for_action

x = analyze_games(criterion=lambda game: get_specific_win_condition(game),
                  games=query_games(constraints=lambda game: "Purloin" in game["completed_missions"]),
                  categorization=lambda game: tuple(get_tests_for_action(game, "Purloin")))
analysis_report(x)

Results of ()
627x	(44.63%)	SpyShot
401x	(28.54%)	CivilianShot
300x	(21.35%)	MissionsWin
77x		 (5.48%)	TimeOut
Results of ('Green',)
447x	(35.14%)	SpyShot
410x	(32.23%)	CivilianShot
370x	(29.09%)	MissionsWin
45x		 (3.54%)	TimeOut
Results of ('Red',)
43x		(58.11%)	SpyShot
15x		(20.27%)	MissionsWin
12x		(16.22%)	CivilianShot
4x		 (5.41%)	TimeOut
Results of ('White',)
956x	(56.53%)	SpyShot
347x	(20.52%)	CivilianShot
330x	(19.52%)	MissionsWin
58x		 (3.43%)	TimeOut
...

# 13
x = analyze_games(criterion=lambda game: [game["spy"] for event in game["timeline"] if event["event"] == "waiter gave up."],
                  games=query_games(constraints=lambda game: game["division"] != "Challenger"))
occurrence_report(x)

Queried 13476 games:
 Accepted 10006 games (74.3%)
 Rejected 3470 games (25.7%)
6x		 (4.35%)	quicklime
6x		 (4.35%)	checker
5x		 (3.62%)	basiQ/steam
...

# 14, 15
from Constants.Venues import bar_venues
from Criteria.DrinkOffers import *

bar_games = query_games(constraints=lambda game: game["venue"] in bar_venues and "Purloin" in game["completed_missions"])
x = analyze_games(games=bar_games, criterion=general_delegate_description)
occurrence_report(x)

Queried 13476 games:
 Accepted 1434 games (10.6%)
 Rejected 12042 games (89.4%)
1058x	(73.78%)	Delegated Purloin
376x	(26.22%)	Direct Purloin

bar_games = query_games(constraints=lambda game: game["venue"] in bar_venues and "Purloin" in game["completed_missions"])
x = analyze_games(games=bar_games, criterion=general_delegate_description, categorization=lambda game: game["venue"])
occurrence_report(x)

Queried 13476 games:
 Accepted 1434 games (10.6%)
 Rejected 12042 games (89.4%)
Results of Pub
306x	(74.63%)	Delegated Purloin
104x	(25.37%)	Direct Purloin
Results of Moderne
493x	(80.56%)	Delegated Purloin
119x	(19.44%)	Direct Purloin
Results of Terrace
157x	(56.47%)	Delegated Purloin
121x	(43.53%)	Direct Purloin
Results of Aquarium
102x	(76.69%)	Delegated Purloin
31x		(23.31%)	Direct Purloin
Results of Redwoods
1x		(100.0%)	Direct Purloin


# 16
from Criteria.BugAttempts import get_bug_attempts
x = analyze_games(games=query_games(constraints=lambda game: "Bug" in game["completed_missions"]), criterion=get_bug_attempts)
analysis_report(x)

Queried 13476 games:
 Accepted 4864 games (36.1%)
 Rejected 8612 games (63.9%)
3038x	(62.46%)	Walking
1036x	(21.3%)	Standing
412x	 (8.47%)	Reverse
246x	 (5.06%)	Entry
108x	 (2.22%)	Exit
24x		 (0.49%)	Twitch

# 17
from Criteria.Trivia.StarterDrink import spy_started_with_drink
query_games(constraints=spy_started_with_drink)

Queried 13476 games:
 Accepted 5242 games (38.9%)
 Rejected 8234 games (61.1%)

# 18

from Criteria.Fingerprints import fingerprints
x = analyze_games(games=query_games(), criterion=fingerprints)
analysis_report(x)

2074x	(37.08%)	Briefcase
1133x	(20.25%)	Statue
1017x	(18.18%)	Book
642x	(11.48%)	Drink
249x	 (4.45%)	Book (Difficult Success)
196x	 (3.5%)	Briefcase (Difficult Success)
171x	 (3.06%)	Drink (Difficult Success)
112x	 (2.0%)	Statue (Difficult Success)

# 19
from Criteria.Fingerprints import fingerprints
x = analyze_games(games=query_games(constraints=lambda game: "Fingerprint" in game["completed_missions"] and game["event"] in ["SCL4", "SCL5"]),
                  criterion=lambda game: "Difficult Success" in str(fingerprints(game, only_success=False)))
analysis_report(x)

Queried 13476 games:
 Accepted 1257 games (9.3%)
 Rejected 12219 games (90.7%)
1044x	(83.05%)	False
213x	(16.95%)	True